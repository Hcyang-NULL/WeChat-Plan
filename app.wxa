<template>
    <page></page>
</template>

<script>
    import system from './static/utils/system'
    export default {
        config: {
            usingComponents: {},
            pages: [
                'pages/home/index',
                'pages/plan/plan',
                'pages/check/check',
                'pages/past/past',
                'pages/recog/recog'
            ],
            window: {
                backgroundTextStyle: 'dark',
                backgroundColor: '#FAFAFA',
                navigationBarBackgroundColor: '#FFFFFF',
                navigationBarTitleText: 'TouchUI',
                navigationBarTextStyle: 'black'
            },
            networkTimeout: {
                request: 10000
            },
            theme: {
                'theme-color': '#39f'
            }
        },
        globalData: {
            server: 'http://127.0.0.1:19552',
            plan: []
        },
        onLaunch() {
            system.attachInfo()
        },
        onLoad() {},
        onHide() {},
        getOpenid() {
            const that = this
            wx.login({
                timeout: 3000,
                success: res => {
                    wx.request({
                        url: this.globalData.server + '/request_openid',
                        data: {
                            js_code: res.code
                        },
                        header: {
                            'content-type': 'application/json'
                        },
                        method: 'POST',
                        dataType: 'json',
                        success: result => {
                            console.log(result)
                            if (result.statusCode == 200) {
                                if (result.data.status == 200) {
                                    wx.setStorage({
                                        key: 'openid',
                                        data: result.data.open_id
                                    })
                                    return 0
                                }
                                return 1
                            }
                            return 2
                        },
                        fail: () => {
                            return 3
                        }
                    })
                }
            })
        }
    }
</script>

<style lang="less">
    @import './static/styles/index.less';
</style>